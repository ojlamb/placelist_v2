// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlaceView snapshots Scenario 1 matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlaceView
    actions={
      Object {
        "createPlace": [MockFunction],
        "loadPlaces": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    classes={Object {}}
    places={
      Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Fab)
          aria-label="Add"
          className=""
          color="primary"
          onClick={[Function]}
        >
          <pure(AddIcon) />
        </WithStyles(Fab)>,
        <NewPlace
          createPlace={[Function]}
          formOpen={false}
          handleClose={[Function]}
          places={Array []}
        />,
        <div
          style={
            Object {
              "maxHeight": "100vh",
              "overflow": "auto",
            }
          }
        >
          <div
            className=""
          >
            <WithStyles(Grid)
              container={true}
              spacing={32}
            >
              <WithStyles(Grid)
                item={true}
                lg={3}
                md={4}
                sm={6}
              >
                <WithStyles(PlaceCard)
                  id={1}
                />
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
                lg={3}
                md={4}
                sm={6}
              >
                <WithStyles(PlaceCard)
                  id={2}
                />
              </WithStyles(Grid)>
            </WithStyles(Grid)>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": "Add",
          "children": <pure(AddIcon) />,
          "className": "",
          "color": "primary",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "createPlace": [Function],
          "formOpen": false,
          "handleClose": [Function],
          "places": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className=""
          >
            <WithStyles(Grid)
              container={true}
              spacing={32}
            >
              <WithStyles(Grid)
                item={true}
                lg={3}
                md={4}
                sm={6}
              >
                <WithStyles(PlaceCard)
                  id={1}
                />
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
                lg={3}
                md={4}
                sm={6}
              >
                <WithStyles(PlaceCard)
                  id={2}
                />
              </WithStyles(Grid)>
            </WithStyles(Grid)>
          </div>,
          "style": Object {
            "maxHeight": "100vh",
            "overflow": "auto",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Grid)
              container={true}
              spacing={32}
            >
              <WithStyles(Grid)
                item={true}
                lg={3}
                md={4}
                sm={6}
              >
                <WithStyles(PlaceCard)
                  id={1}
                />
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
                lg={3}
                md={4}
                sm={6}
              >
                <WithStyles(PlaceCard)
                  id={2}
                />
              </WithStyles(Grid)>
            </WithStyles(Grid)>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={1}
                  />
                </WithStyles(Grid)>,
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={2}
                  />
                </WithStyles(Grid)>,
              ],
              "container": true,
              "spacing": 32,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(PlaceCard)
                    id={1}
                  />,
                  "item": true,
                  "lg": 3,
                  "md": 4,
                  "sm": 6,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "id": 1,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(PlaceCard)
                    id={2}
                  />,
                  "item": true,
                  "lg": 3,
                  "md": 4,
                  "sm": 6,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "id": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Fab)
            aria-label="Add"
            className=""
            color="primary"
            onClick={[Function]}
          >
            <pure(AddIcon) />
          </WithStyles(Fab)>,
          <NewPlace
            createPlace={[Function]}
            formOpen={false}
            handleClose={[Function]}
            places={Array []}
          />,
          <div
            style={
              Object {
                "maxHeight": "100vh",
                "overflow": "auto",
              }
            }
          >
            <div
              className=""
            >
              <WithStyles(Grid)
                container={true}
                spacing={32}
              >
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={1}
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={2}
                  />
                </WithStyles(Grid)>
              </WithStyles(Grid)>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": "Add",
            "children": <pure(AddIcon) />,
            "className": "",
            "color": "primary",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "createPlace": [Function],
            "formOpen": false,
            "handleClose": [Function],
            "places": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className=""
            >
              <WithStyles(Grid)
                container={true}
                spacing={32}
              >
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={1}
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={2}
                  />
                </WithStyles(Grid)>
              </WithStyles(Grid)>
            </div>,
            "style": Object {
              "maxHeight": "100vh",
              "overflow": "auto",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(Grid)
                container={true}
                spacing={32}
              >
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={1}
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={3}
                  md={4}
                  sm={6}
                >
                  <WithStyles(PlaceCard)
                    id={2}
                  />
                </WithStyles(Grid)>
              </WithStyles(Grid)>,
              "className": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(Grid)
                    item={true}
                    lg={3}
                    md={4}
                    sm={6}
                  >
                    <WithStyles(PlaceCard)
                      id={1}
                    />
                  </WithStyles(Grid)>,
                  <WithStyles(Grid)
                    item={true}
                    lg={3}
                    md={4}
                    sm={6}
                  >
                    <WithStyles(PlaceCard)
                      id={2}
                    />
                  </WithStyles(Grid)>,
                ],
                "container": true,
                "spacing": 32,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(PlaceCard)
                      id={1}
                    />,
                    "item": true,
                    "lg": 3,
                    "md": 4,
                    "sm": 6,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "id": 1,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(PlaceCard)
                      id={2}
                    />,
                    "item": true,
                    "lg": 3,
                    "md": 4,
                    "sm": 6,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "class",
                    "props": Object {
                      "id": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`PlaceView styles matches snapshot 1`] = `
Object {
  "actionButton": Object {
    "bottom": 20,
    "left": "auto",
    "margin": 0,
    "position": "fixed",
    "right": 20,
    "top": "auto",
  },
  "cardGrid": Object {
    "padding": "80px 0",
  },
  "icon": Object {
    "marginRight": 20,
  },
  "layout": Object {
    "margin": "10px",
    "marginLeft": 30,
    "marginRight": 30,
    "undefined": Object {
      "marginLeft": "auto",
      "marginRight": "auto",
      "width": 1100,
    },
    "width": "auto",
  },
}
`;
