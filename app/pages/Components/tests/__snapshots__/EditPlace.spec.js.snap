// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPlace snapshots Scenario 1 matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditPlace
    classes={Object {}}
    formOpen={true}
    handleClose={[MockFunction]}
    place={
      Object {
        "address": "123 main st.",
        "category": "dinner",
        "description": "test",
        "id": 1,
        "name": "FOO",
      }
    }
    updatePlace={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Dialog)
        aria-labelledby="form-dialog-title"
        onClose={[Function]}
        open={true}
      >
        <WithStyles(DialogTitle)
          id="form-dialog-title"
        >
          Add Place
        </WithStyles(DialogTitle)>
        <WithStyles(DialogContent)
          style={
            Object {
              "paddingLeft": "25px",
              "paddingRight": "25px",
            }
          }
        >
          <WithStyles(DialogContentText)
            style={
              Object {
                "marginBottom": "10px",
              }
            }
          >
            Please fill out the place form to add your spot to the list!
          </WithStyles(DialogContentText)>
          <TextField
            disabled={true}
            fullWidth={true}
            id="name"
            label="Name"
            margin="dense"
            required={false}
            select={false}
            type="name"
            value="FOO"
            variant="standard"
          />
          <TextField
            disabled={true}
            fullWidth={true}
            id="name"
            label="Address"
            margin="dense"
            required={false}
            select={false}
            type="address"
            value="123 main st."
            variant="standard"
          />
          <WithStyles(WithFormControlContext(Select))
            displayEmpty={true}
            fullWidth={true}
            id="name"
            label="Category"
            name="category"
            onChange={[Function]}
            style={
              Object {
                "marginTop": "13px",
              }
            }
            value=""
          >
            <WithStyles(MenuItem)
              disabled={true}
              value=""
            >
              Category
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="drinks"
            >
              Drinks
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="dinner"
            >
              Dinner
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="burgers"
            >
              Burgers
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="tacos"
            >
              Tacos
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="sushi"
            >
              Sushi
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="brewery"
            >
              Brewery
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="club"
            >
              Club
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="coffee"
            >
              Coffee
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="lunch"
            >
              Lunch
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="brunch"
            >
              Brunch
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="other"
            >
              Other
            </WithStyles(MenuItem)>
          </WithStyles(WithFormControlContext(Select))>
          <TextField
            fullWidth={true}
            id="name"
            label="Description"
            margin="dense"
            onChange={[Function]}
            required={false}
            select={false}
            type="description"
            value="test"
            variant="standard"
          />
        </WithStyles(DialogContent)>
        <WithStyles(DialogActions)>
          <WithStyles(Button)
            color="primary"
            onClick={[Function]}
          >
            Cancel
          </WithStyles(Button)>
          <WithStyles(Button)
            color="primary"
            onClick={[Function]}
          >
            Submit
          </WithStyles(Button)>
        </WithStyles(DialogActions)>
      </WithStyles(Dialog)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "aria-labelledby": "form-dialog-title",
        "children": Array [
          <WithStyles(DialogTitle)
            id="form-dialog-title"
          >
            Add Place
          </WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)
            style={
              Object {
                "paddingLeft": "25px",
                "paddingRight": "25px",
              }
            }
          >
            <WithStyles(DialogContentText)
              style={
                Object {
                  "marginBottom": "10px",
                }
              }
            >
              Please fill out the place form to add your spot to the list!
            </WithStyles(DialogContentText)>
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Name"
              margin="dense"
              required={false}
              select={false}
              type="name"
              value="FOO"
              variant="standard"
            />
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Address"
              margin="dense"
              required={false}
              select={false}
              type="address"
              value="123 main st."
              variant="standard"
            />
            <WithStyles(WithFormControlContext(Select))
              displayEmpty={true}
              fullWidth={true}
              id="name"
              label="Category"
              name="category"
              onChange={[Function]}
              style={
                Object {
                  "marginTop": "13px",
                }
              }
              value=""
            >
              <WithStyles(MenuItem)
                disabled={true}
                value=""
              >
                Category
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="drinks"
              >
                Drinks
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="dinner"
              >
                Dinner
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="burgers"
              >
                Burgers
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="tacos"
              >
                Tacos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="sushi"
              >
                Sushi
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brewery"
              >
                Brewery
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="club"
              >
                Club
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="coffee"
              >
                Coffee
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="lunch"
              >
                Lunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brunch"
              >
                Brunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="other"
              >
                Other
              </WithStyles(MenuItem)>
            </WithStyles(WithFormControlContext(Select))>
            <TextField
              fullWidth={true}
              id="name"
              label="Description"
              margin="dense"
              onChange={[Function]}
              required={false}
              select={false}
              type="description"
              value="test"
              variant="standard"
            />
          </WithStyles(DialogContent)>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Cancel
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Submit
            </WithStyles(Button)>
          </WithStyles(DialogActions)>,
        ],
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Add Place",
            "id": "form-dialog-title",
          },
          "ref": null,
          "rendered": "Add Place",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(DialogContentText)
                style={
                  Object {
                    "marginBottom": "10px",
                  }
                }
              >
                Please fill out the place form to add your spot to the list!
              </WithStyles(DialogContentText)>,
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Name"
                margin="dense"
                required={false}
                select={false}
                type="name"
                value="FOO"
                variant="standard"
              />,
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Address"
                margin="dense"
                required={false}
                select={false}
                type="address"
                value="123 main st."
                variant="standard"
              />,
              <WithStyles(WithFormControlContext(Select))
                displayEmpty={true}
                fullWidth={true}
                id="name"
                label="Category"
                name="category"
                onChange={[Function]}
                style={
                  Object {
                    "marginTop": "13px",
                  }
                }
                value=""
              >
                <WithStyles(MenuItem)
                  disabled={true}
                  value=""
                >
                  Category
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="drinks"
                >
                  Drinks
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="dinner"
                >
                  Dinner
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="burgers"
                >
                  Burgers
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="tacos"
                >
                  Tacos
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="sushi"
                >
                  Sushi
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brewery"
                >
                  Brewery
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="club"
                >
                  Club
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="coffee"
                >
                  Coffee
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="lunch"
                >
                  Lunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brunch"
                >
                  Brunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="other"
                >
                  Other
                </WithStyles(MenuItem)>
              </WithStyles(WithFormControlContext(Select))>,
              <TextField
                fullWidth={true}
                id="name"
                label="Description"
                margin="dense"
                onChange={[Function]}
                required={false}
                select={false}
                type="description"
                value="test"
                variant="standard"
              />,
            ],
            "style": Object {
              "paddingLeft": "25px",
              "paddingRight": "25px",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Please fill out the place form to add your spot to the list!",
                "style": Object {
                  "marginBottom": "10px",
                },
              },
              "ref": null,
              "rendered": "Please fill out the place form to add your spot to the list!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": true,
                "fullWidth": true,
                "id": "name",
                "label": "Name",
                "margin": "dense",
                "required": false,
                "select": false,
                "type": "name",
                "value": "FOO",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": true,
                "fullWidth": true,
                "id": "name",
                "label": "Address",
                "margin": "dense",
                "required": false,
                "select": false,
                "type": "address",
                "value": "123 main st.",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    disabled={true}
                    value=""
                  >
                    Category
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="drinks"
                  >
                    Drinks
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="dinner"
                  >
                    Dinner
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="burgers"
                  >
                    Burgers
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="tacos"
                  >
                    Tacos
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="sushi"
                  >
                    Sushi
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="brewery"
                  >
                    Brewery
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="club"
                  >
                    Club
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="coffee"
                  >
                    Coffee
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="lunch"
                  >
                    Lunch
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="brunch"
                  >
                    Brunch
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="other"
                  >
                    Other
                  </WithStyles(MenuItem)>,
                ],
                "displayEmpty": true,
                "fullWidth": true,
                "id": "name",
                "label": "Category",
                "name": "category",
                "onChange": [Function],
                "style": Object {
                  "marginTop": "13px",
                },
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Category",
                    "disabled": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": "Category",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Drinks",
                    "value": "drinks",
                  },
                  "ref": null,
                  "rendered": "Drinks",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Dinner",
                    "value": "dinner",
                  },
                  "ref": null,
                  "rendered": "Dinner",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Burgers",
                    "value": "burgers",
                  },
                  "ref": null,
                  "rendered": "Burgers",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Tacos",
                    "value": "tacos",
                  },
                  "ref": null,
                  "rendered": "Tacos",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sushi",
                    "value": "sushi",
                  },
                  "ref": null,
                  "rendered": "Sushi",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Brewery",
                    "value": "brewery",
                  },
                  "ref": null,
                  "rendered": "Brewery",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Club",
                    "value": "club",
                  },
                  "ref": null,
                  "rendered": "Club",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Coffee",
                    "value": "coffee",
                  },
                  "ref": null,
                  "rendered": "Coffee",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Lunch",
                    "value": "lunch",
                  },
                  "ref": null,
                  "rendered": "Lunch",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Brunch",
                    "value": "brunch",
                  },
                  "ref": null,
                  "rendered": "Brunch",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Other",
                    "value": "other",
                  },
                  "ref": null,
                  "rendered": "Other",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fullWidth": true,
                "id": "name",
                "label": "Description",
                "margin": "dense",
                "onChange": [Function],
                "required": false,
                "select": false,
                "type": "description",
                "value": "test",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Submit",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Submit",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Dialog)
          aria-labelledby="form-dialog-title"
          onClose={[Function]}
          open={true}
        >
          <WithStyles(DialogTitle)
            id="form-dialog-title"
          >
            Add Place
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)
            style={
              Object {
                "paddingLeft": "25px",
                "paddingRight": "25px",
              }
            }
          >
            <WithStyles(DialogContentText)
              style={
                Object {
                  "marginBottom": "10px",
                }
              }
            >
              Please fill out the place form to add your spot to the list!
            </WithStyles(DialogContentText)>
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Name"
              margin="dense"
              required={false}
              select={false}
              type="name"
              value="FOO"
              variant="standard"
            />
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Address"
              margin="dense"
              required={false}
              select={false}
              type="address"
              value="123 main st."
              variant="standard"
            />
            <WithStyles(WithFormControlContext(Select))
              displayEmpty={true}
              fullWidth={true}
              id="name"
              label="Category"
              name="category"
              onChange={[Function]}
              style={
                Object {
                  "marginTop": "13px",
                }
              }
              value=""
            >
              <WithStyles(MenuItem)
                disabled={true}
                value=""
              >
                Category
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="drinks"
              >
                Drinks
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="dinner"
              >
                Dinner
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="burgers"
              >
                Burgers
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="tacos"
              >
                Tacos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="sushi"
              >
                Sushi
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brewery"
              >
                Brewery
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="club"
              >
                Club
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="coffee"
              >
                Coffee
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="lunch"
              >
                Lunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brunch"
              >
                Brunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="other"
              >
                Other
              </WithStyles(MenuItem)>
            </WithStyles(WithFormControlContext(Select))>
            <TextField
              fullWidth={true}
              id="name"
              label="Description"
              margin="dense"
              onChange={[Function]}
              required={false}
              select={false}
              type="description"
              value="test"
              variant="standard"
            />
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Cancel
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Submit
            </WithStyles(Button)>
          </WithStyles(DialogActions)>
        </WithStyles(Dialog)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-labelledby": "form-dialog-title",
          "children": Array [
            <WithStyles(DialogTitle)
              id="form-dialog-title"
            >
              Add Place
            </WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)
              style={
                Object {
                  "paddingLeft": "25px",
                  "paddingRight": "25px",
                }
              }
            >
              <WithStyles(DialogContentText)
                style={
                  Object {
                    "marginBottom": "10px",
                  }
                }
              >
                Please fill out the place form to add your spot to the list!
              </WithStyles(DialogContentText)>
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Name"
                margin="dense"
                required={false}
                select={false}
                type="name"
                value="FOO"
                variant="standard"
              />
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Address"
                margin="dense"
                required={false}
                select={false}
                type="address"
                value="123 main st."
                variant="standard"
              />
              <WithStyles(WithFormControlContext(Select))
                displayEmpty={true}
                fullWidth={true}
                id="name"
                label="Category"
                name="category"
                onChange={[Function]}
                style={
                  Object {
                    "marginTop": "13px",
                  }
                }
                value=""
              >
                <WithStyles(MenuItem)
                  disabled={true}
                  value=""
                >
                  Category
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="drinks"
                >
                  Drinks
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="dinner"
                >
                  Dinner
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="burgers"
                >
                  Burgers
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="tacos"
                >
                  Tacos
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="sushi"
                >
                  Sushi
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brewery"
                >
                  Brewery
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="club"
                >
                  Club
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="coffee"
                >
                  Coffee
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="lunch"
                >
                  Lunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brunch"
                >
                  Brunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="other"
                >
                  Other
                </WithStyles(MenuItem)>
              </WithStyles(WithFormControlContext(Select))>
              <TextField
                fullWidth={true}
                id="name"
                label="Description"
                margin="dense"
                onChange={[Function]}
                required={false}
                select={false}
                type="description"
                value="test"
                variant="standard"
              />
            </WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>
            </WithStyles(DialogActions)>,
          ],
          "onClose": [Function],
          "open": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add Place",
              "id": "form-dialog-title",
            },
            "ref": null,
            "rendered": "Add Place",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(DialogContentText)
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  Please fill out the place form to add your spot to the list!
                </WithStyles(DialogContentText)>,
                <TextField
                  disabled={true}
                  fullWidth={true}
                  id="name"
                  label="Name"
                  margin="dense"
                  required={false}
                  select={false}
                  type="name"
                  value="FOO"
                  variant="standard"
                />,
                <TextField
                  disabled={true}
                  fullWidth={true}
                  id="name"
                  label="Address"
                  margin="dense"
                  required={false}
                  select={false}
                  type="address"
                  value="123 main st."
                  variant="standard"
                />,
                <WithStyles(WithFormControlContext(Select))
                  displayEmpty={true}
                  fullWidth={true}
                  id="name"
                  label="Category"
                  name="category"
                  onChange={[Function]}
                  style={
                    Object {
                      "marginTop": "13px",
                    }
                  }
                  value=""
                >
                  <WithStyles(MenuItem)
                    disabled={true}
                    value=""
                  >
                    Category
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="drinks"
                  >
                    Drinks
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="dinner"
                  >
                    Dinner
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="burgers"
                  >
                    Burgers
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="tacos"
                  >
                    Tacos
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="sushi"
                  >
                    Sushi
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="brewery"
                  >
                    Brewery
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="club"
                  >
                    Club
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="coffee"
                  >
                    Coffee
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="lunch"
                  >
                    Lunch
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="brunch"
                  >
                    Brunch
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="other"
                  >
                    Other
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>,
                <TextField
                  fullWidth={true}
                  id="name"
                  label="Description"
                  margin="dense"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  type="description"
                  value="test"
                  variant="standard"
                />,
              ],
              "style": Object {
                "paddingLeft": "25px",
                "paddingRight": "25px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Please fill out the place form to add your spot to the list!",
                  "style": Object {
                    "marginBottom": "10px",
                  },
                },
                "ref": null,
                "rendered": "Please fill out the place form to add your spot to the list!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Name",
                  "margin": "dense",
                  "required": false,
                  "select": false,
                  "type": "name",
                  "value": "FOO",
                  "variant": "standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Address",
                  "margin": "dense",
                  "required": false,
                  "select": false,
                  "type": "address",
                  "value": "123 main st.",
                  "variant": "standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(MenuItem)
                      disabled={true}
                      value=""
                    >
                      Category
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="drinks"
                    >
                      Drinks
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="dinner"
                    >
                      Dinner
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="burgers"
                    >
                      Burgers
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="tacos"
                    >
                      Tacos
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="sushi"
                    >
                      Sushi
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="brewery"
                    >
                      Brewery
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="club"
                    >
                      Club
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="coffee"
                    >
                      Coffee
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="lunch"
                    >
                      Lunch
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="brunch"
                    >
                      Brunch
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="other"
                    >
                      Other
                    </WithStyles(MenuItem)>,
                  ],
                  "displayEmpty": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Category",
                  "name": "category",
                  "onChange": [Function],
                  "style": Object {
                    "marginTop": "13px",
                  },
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Category",
                      "disabled": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": "Category",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Drinks",
                      "value": "drinks",
                    },
                    "ref": null,
                    "rendered": "Drinks",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Dinner",
                      "value": "dinner",
                    },
                    "ref": null,
                    "rendered": "Dinner",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Burgers",
                      "value": "burgers",
                    },
                    "ref": null,
                    "rendered": "Burgers",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Tacos",
                      "value": "tacos",
                    },
                    "ref": null,
                    "rendered": "Tacos",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sushi",
                      "value": "sushi",
                    },
                    "ref": null,
                    "rendered": "Sushi",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Brewery",
                      "value": "brewery",
                    },
                    "ref": null,
                    "rendered": "Brewery",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Club",
                      "value": "club",
                    },
                    "ref": null,
                    "rendered": "Club",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Coffee",
                      "value": "coffee",
                    },
                    "ref": null,
                    "rendered": "Coffee",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Lunch",
                      "value": "lunch",
                    },
                    "ref": null,
                    "rendered": "Lunch",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Brunch",
                      "value": "brunch",
                    },
                    "ref": null,
                    "rendered": "Brunch",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Other",
                      "value": "other",
                    },
                    "ref": null,
                    "rendered": "Other",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fullWidth": true,
                  "id": "name",
                  "label": "Description",
                  "margin": "dense",
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "description",
                  "value": "test",
                  "variant": "standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>,
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                >
                  Submit
                </WithStyles(Button)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Submit",
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Submit",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`EditPlace snapshots Scenario 2 matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditPlace
    classes={Object {}}
    formOpen={false}
    handleClose={[MockFunction]}
    place={
      Object {
        "address": "123 main st.",
        "category": "drinks",
        "description": "test",
        "id": 2,
        "name": "FOO",
      }
    }
    updatePlace={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Dialog)
        aria-labelledby="form-dialog-title"
        onClose={[Function]}
        open={false}
      >
        <WithStyles(DialogTitle)
          id="form-dialog-title"
        >
          Add Place
        </WithStyles(DialogTitle)>
        <WithStyles(DialogContent)
          style={
            Object {
              "paddingLeft": "25px",
              "paddingRight": "25px",
            }
          }
        >
          <WithStyles(DialogContentText)
            style={
              Object {
                "marginBottom": "10px",
              }
            }
          >
            Please fill out the place form to add your spot to the list!
          </WithStyles(DialogContentText)>
          <TextField
            disabled={true}
            fullWidth={true}
            id="name"
            label="Name"
            margin="dense"
            required={false}
            select={false}
            type="name"
            value="FOO"
            variant="standard"
          />
          <TextField
            disabled={true}
            fullWidth={true}
            id="name"
            label="Address"
            margin="dense"
            required={false}
            select={false}
            type="address"
            value="123 main st."
            variant="standard"
          />
          <WithStyles(WithFormControlContext(Select))
            displayEmpty={true}
            fullWidth={true}
            id="name"
            label="Category"
            name="category"
            onChange={[Function]}
            style={
              Object {
                "marginTop": "13px",
              }
            }
            value=""
          >
            <WithStyles(MenuItem)
              disabled={true}
              value=""
            >
              Category
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="drinks"
            >
              Drinks
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="dinner"
            >
              Dinner
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="burgers"
            >
              Burgers
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="tacos"
            >
              Tacos
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="sushi"
            >
              Sushi
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="brewery"
            >
              Brewery
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="club"
            >
              Club
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="coffee"
            >
              Coffee
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="lunch"
            >
              Lunch
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="brunch"
            >
              Brunch
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="other"
            >
              Other
            </WithStyles(MenuItem)>
          </WithStyles(WithFormControlContext(Select))>
          <TextField
            fullWidth={true}
            id="name"
            label="Description"
            margin="dense"
            onChange={[Function]}
            required={false}
            select={false}
            type="description"
            value="test"
            variant="standard"
          />
        </WithStyles(DialogContent)>
        <WithStyles(DialogActions)>
          <WithStyles(Button)
            color="primary"
            onClick={[Function]}
          >
            Cancel
          </WithStyles(Button)>
          <WithStyles(Button)
            color="primary"
            onClick={[Function]}
          >
            Submit
          </WithStyles(Button)>
        </WithStyles(DialogActions)>
      </WithStyles(Dialog)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "aria-labelledby": "form-dialog-title",
        "children": Array [
          <WithStyles(DialogTitle)
            id="form-dialog-title"
          >
            Add Place
          </WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)
            style={
              Object {
                "paddingLeft": "25px",
                "paddingRight": "25px",
              }
            }
          >
            <WithStyles(DialogContentText)
              style={
                Object {
                  "marginBottom": "10px",
                }
              }
            >
              Please fill out the place form to add your spot to the list!
            </WithStyles(DialogContentText)>
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Name"
              margin="dense"
              required={false}
              select={false}
              type="name"
              value="FOO"
              variant="standard"
            />
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Address"
              margin="dense"
              required={false}
              select={false}
              type="address"
              value="123 main st."
              variant="standard"
            />
            <WithStyles(WithFormControlContext(Select))
              displayEmpty={true}
              fullWidth={true}
              id="name"
              label="Category"
              name="category"
              onChange={[Function]}
              style={
                Object {
                  "marginTop": "13px",
                }
              }
              value=""
            >
              <WithStyles(MenuItem)
                disabled={true}
                value=""
              >
                Category
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="drinks"
              >
                Drinks
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="dinner"
              >
                Dinner
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="burgers"
              >
                Burgers
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="tacos"
              >
                Tacos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="sushi"
              >
                Sushi
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brewery"
              >
                Brewery
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="club"
              >
                Club
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="coffee"
              >
                Coffee
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="lunch"
              >
                Lunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brunch"
              >
                Brunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="other"
              >
                Other
              </WithStyles(MenuItem)>
            </WithStyles(WithFormControlContext(Select))>
            <TextField
              fullWidth={true}
              id="name"
              label="Description"
              margin="dense"
              onChange={[Function]}
              required={false}
              select={false}
              type="description"
              value="test"
              variant="standard"
            />
          </WithStyles(DialogContent)>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Cancel
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Submit
            </WithStyles(Button)>
          </WithStyles(DialogActions)>,
        ],
        "onClose": [Function],
        "open": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Add Place",
            "id": "form-dialog-title",
          },
          "ref": null,
          "rendered": "Add Place",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(DialogContentText)
                style={
                  Object {
                    "marginBottom": "10px",
                  }
                }
              >
                Please fill out the place form to add your spot to the list!
              </WithStyles(DialogContentText)>,
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Name"
                margin="dense"
                required={false}
                select={false}
                type="name"
                value="FOO"
                variant="standard"
              />,
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Address"
                margin="dense"
                required={false}
                select={false}
                type="address"
                value="123 main st."
                variant="standard"
              />,
              <WithStyles(WithFormControlContext(Select))
                displayEmpty={true}
                fullWidth={true}
                id="name"
                label="Category"
                name="category"
                onChange={[Function]}
                style={
                  Object {
                    "marginTop": "13px",
                  }
                }
                value=""
              >
                <WithStyles(MenuItem)
                  disabled={true}
                  value=""
                >
                  Category
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="drinks"
                >
                  Drinks
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="dinner"
                >
                  Dinner
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="burgers"
                >
                  Burgers
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="tacos"
                >
                  Tacos
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="sushi"
                >
                  Sushi
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brewery"
                >
                  Brewery
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="club"
                >
                  Club
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="coffee"
                >
                  Coffee
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="lunch"
                >
                  Lunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brunch"
                >
                  Brunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="other"
                >
                  Other
                </WithStyles(MenuItem)>
              </WithStyles(WithFormControlContext(Select))>,
              <TextField
                fullWidth={true}
                id="name"
                label="Description"
                margin="dense"
                onChange={[Function]}
                required={false}
                select={false}
                type="description"
                value="test"
                variant="standard"
              />,
            ],
            "style": Object {
              "paddingLeft": "25px",
              "paddingRight": "25px",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Please fill out the place form to add your spot to the list!",
                "style": Object {
                  "marginBottom": "10px",
                },
              },
              "ref": null,
              "rendered": "Please fill out the place form to add your spot to the list!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": true,
                "fullWidth": true,
                "id": "name",
                "label": "Name",
                "margin": "dense",
                "required": false,
                "select": false,
                "type": "name",
                "value": "FOO",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": true,
                "fullWidth": true,
                "id": "name",
                "label": "Address",
                "margin": "dense",
                "required": false,
                "select": false,
                "type": "address",
                "value": "123 main st.",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    disabled={true}
                    value=""
                  >
                    Category
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="drinks"
                  >
                    Drinks
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="dinner"
                  >
                    Dinner
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="burgers"
                  >
                    Burgers
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="tacos"
                  >
                    Tacos
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="sushi"
                  >
                    Sushi
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="brewery"
                  >
                    Brewery
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="club"
                  >
                    Club
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="coffee"
                  >
                    Coffee
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="lunch"
                  >
                    Lunch
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="brunch"
                  >
                    Brunch
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="other"
                  >
                    Other
                  </WithStyles(MenuItem)>,
                ],
                "displayEmpty": true,
                "fullWidth": true,
                "id": "name",
                "label": "Category",
                "name": "category",
                "onChange": [Function],
                "style": Object {
                  "marginTop": "13px",
                },
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Category",
                    "disabled": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": "Category",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Drinks",
                    "value": "drinks",
                  },
                  "ref": null,
                  "rendered": "Drinks",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Dinner",
                    "value": "dinner",
                  },
                  "ref": null,
                  "rendered": "Dinner",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Burgers",
                    "value": "burgers",
                  },
                  "ref": null,
                  "rendered": "Burgers",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Tacos",
                    "value": "tacos",
                  },
                  "ref": null,
                  "rendered": "Tacos",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sushi",
                    "value": "sushi",
                  },
                  "ref": null,
                  "rendered": "Sushi",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Brewery",
                    "value": "brewery",
                  },
                  "ref": null,
                  "rendered": "Brewery",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Club",
                    "value": "club",
                  },
                  "ref": null,
                  "rendered": "Club",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Coffee",
                    "value": "coffee",
                  },
                  "ref": null,
                  "rendered": "Coffee",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Lunch",
                    "value": "lunch",
                  },
                  "ref": null,
                  "rendered": "Lunch",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Brunch",
                    "value": "brunch",
                  },
                  "ref": null,
                  "rendered": "Brunch",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Other",
                    "value": "other",
                  },
                  "ref": null,
                  "rendered": "Other",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fullWidth": true,
                "id": "name",
                "label": "Description",
                "margin": "dense",
                "onChange": [Function],
                "required": false,
                "select": false,
                "type": "description",
                "value": "test",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Submit",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Submit",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Dialog)
          aria-labelledby="form-dialog-title"
          onClose={[Function]}
          open={false}
        >
          <WithStyles(DialogTitle)
            id="form-dialog-title"
          >
            Add Place
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)
            style={
              Object {
                "paddingLeft": "25px",
                "paddingRight": "25px",
              }
            }
          >
            <WithStyles(DialogContentText)
              style={
                Object {
                  "marginBottom": "10px",
                }
              }
            >
              Please fill out the place form to add your spot to the list!
            </WithStyles(DialogContentText)>
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Name"
              margin="dense"
              required={false}
              select={false}
              type="name"
              value="FOO"
              variant="standard"
            />
            <TextField
              disabled={true}
              fullWidth={true}
              id="name"
              label="Address"
              margin="dense"
              required={false}
              select={false}
              type="address"
              value="123 main st."
              variant="standard"
            />
            <WithStyles(WithFormControlContext(Select))
              displayEmpty={true}
              fullWidth={true}
              id="name"
              label="Category"
              name="category"
              onChange={[Function]}
              style={
                Object {
                  "marginTop": "13px",
                }
              }
              value=""
            >
              <WithStyles(MenuItem)
                disabled={true}
                value=""
              >
                Category
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="drinks"
              >
                Drinks
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="dinner"
              >
                Dinner
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="burgers"
              >
                Burgers
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="tacos"
              >
                Tacos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="sushi"
              >
                Sushi
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brewery"
              >
                Brewery
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="club"
              >
                Club
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="coffee"
              >
                Coffee
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="lunch"
              >
                Lunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="brunch"
              >
                Brunch
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="other"
              >
                Other
              </WithStyles(MenuItem)>
            </WithStyles(WithFormControlContext(Select))>
            <TextField
              fullWidth={true}
              id="name"
              label="Description"
              margin="dense"
              onChange={[Function]}
              required={false}
              select={false}
              type="description"
              value="test"
              variant="standard"
            />
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Cancel
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
            >
              Submit
            </WithStyles(Button)>
          </WithStyles(DialogActions)>
        </WithStyles(Dialog)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-labelledby": "form-dialog-title",
          "children": Array [
            <WithStyles(DialogTitle)
              id="form-dialog-title"
            >
              Add Place
            </WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)
              style={
                Object {
                  "paddingLeft": "25px",
                  "paddingRight": "25px",
                }
              }
            >
              <WithStyles(DialogContentText)
                style={
                  Object {
                    "marginBottom": "10px",
                  }
                }
              >
                Please fill out the place form to add your spot to the list!
              </WithStyles(DialogContentText)>
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Name"
                margin="dense"
                required={false}
                select={false}
                type="name"
                value="FOO"
                variant="standard"
              />
              <TextField
                disabled={true}
                fullWidth={true}
                id="name"
                label="Address"
                margin="dense"
                required={false}
                select={false}
                type="address"
                value="123 main st."
                variant="standard"
              />
              <WithStyles(WithFormControlContext(Select))
                displayEmpty={true}
                fullWidth={true}
                id="name"
                label="Category"
                name="category"
                onChange={[Function]}
                style={
                  Object {
                    "marginTop": "13px",
                  }
                }
                value=""
              >
                <WithStyles(MenuItem)
                  disabled={true}
                  value=""
                >
                  Category
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="drinks"
                >
                  Drinks
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="dinner"
                >
                  Dinner
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="burgers"
                >
                  Burgers
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="tacos"
                >
                  Tacos
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="sushi"
                >
                  Sushi
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brewery"
                >
                  Brewery
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="club"
                >
                  Club
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="coffee"
                >
                  Coffee
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="lunch"
                >
                  Lunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="brunch"
                >
                  Brunch
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="other"
                >
                  Other
                </WithStyles(MenuItem)>
              </WithStyles(WithFormControlContext(Select))>
              <TextField
                fullWidth={true}
                id="name"
                label="Description"
                margin="dense"
                onChange={[Function]}
                required={false}
                select={false}
                type="description"
                value="test"
                variant="standard"
              />
            </WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>
            </WithStyles(DialogActions)>,
          ],
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add Place",
              "id": "form-dialog-title",
            },
            "ref": null,
            "rendered": "Add Place",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(DialogContentText)
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  Please fill out the place form to add your spot to the list!
                </WithStyles(DialogContentText)>,
                <TextField
                  disabled={true}
                  fullWidth={true}
                  id="name"
                  label="Name"
                  margin="dense"
                  required={false}
                  select={false}
                  type="name"
                  value="FOO"
                  variant="standard"
                />,
                <TextField
                  disabled={true}
                  fullWidth={true}
                  id="name"
                  label="Address"
                  margin="dense"
                  required={false}
                  select={false}
                  type="address"
                  value="123 main st."
                  variant="standard"
                />,
                <WithStyles(WithFormControlContext(Select))
                  displayEmpty={true}
                  fullWidth={true}
                  id="name"
                  label="Category"
                  name="category"
                  onChange={[Function]}
                  style={
                    Object {
                      "marginTop": "13px",
                    }
                  }
                  value=""
                >
                  <WithStyles(MenuItem)
                    disabled={true}
                    value=""
                  >
                    Category
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="drinks"
                  >
                    Drinks
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="dinner"
                  >
                    Dinner
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="burgers"
                  >
                    Burgers
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="tacos"
                  >
                    Tacos
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="sushi"
                  >
                    Sushi
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="brewery"
                  >
                    Brewery
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="club"
                  >
                    Club
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="coffee"
                  >
                    Coffee
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="lunch"
                  >
                    Lunch
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="brunch"
                  >
                    Brunch
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value="other"
                  >
                    Other
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>,
                <TextField
                  fullWidth={true}
                  id="name"
                  label="Description"
                  margin="dense"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  type="description"
                  value="test"
                  variant="standard"
                />,
              ],
              "style": Object {
                "paddingLeft": "25px",
                "paddingRight": "25px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Please fill out the place form to add your spot to the list!",
                  "style": Object {
                    "marginBottom": "10px",
                  },
                },
                "ref": null,
                "rendered": "Please fill out the place form to add your spot to the list!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Name",
                  "margin": "dense",
                  "required": false,
                  "select": false,
                  "type": "name",
                  "value": "FOO",
                  "variant": "standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Address",
                  "margin": "dense",
                  "required": false,
                  "select": false,
                  "type": "address",
                  "value": "123 main st.",
                  "variant": "standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(MenuItem)
                      disabled={true}
                      value=""
                    >
                      Category
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="drinks"
                    >
                      Drinks
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="dinner"
                    >
                      Dinner
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="burgers"
                    >
                      Burgers
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="tacos"
                    >
                      Tacos
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="sushi"
                    >
                      Sushi
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="brewery"
                    >
                      Brewery
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="club"
                    >
                      Club
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="coffee"
                    >
                      Coffee
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="lunch"
                    >
                      Lunch
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="brunch"
                    >
                      Brunch
                    </WithStyles(MenuItem)>,
                    <WithStyles(MenuItem)
                      value="other"
                    >
                      Other
                    </WithStyles(MenuItem)>,
                  ],
                  "displayEmpty": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Category",
                  "name": "category",
                  "onChange": [Function],
                  "style": Object {
                    "marginTop": "13px",
                  },
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Category",
                      "disabled": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": "Category",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Drinks",
                      "value": "drinks",
                    },
                    "ref": null,
                    "rendered": "Drinks",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Dinner",
                      "value": "dinner",
                    },
                    "ref": null,
                    "rendered": "Dinner",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Burgers",
                      "value": "burgers",
                    },
                    "ref": null,
                    "rendered": "Burgers",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Tacos",
                      "value": "tacos",
                    },
                    "ref": null,
                    "rendered": "Tacos",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sushi",
                      "value": "sushi",
                    },
                    "ref": null,
                    "rendered": "Sushi",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Brewery",
                      "value": "brewery",
                    },
                    "ref": null,
                    "rendered": "Brewery",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Club",
                      "value": "club",
                    },
                    "ref": null,
                    "rendered": "Club",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Coffee",
                      "value": "coffee",
                    },
                    "ref": null,
                    "rendered": "Coffee",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Lunch",
                      "value": "lunch",
                    },
                    "ref": null,
                    "rendered": "Lunch",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Brunch",
                      "value": "brunch",
                    },
                    "ref": null,
                    "rendered": "Brunch",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Other",
                      "value": "other",
                    },
                    "ref": null,
                    "rendered": "Other",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fullWidth": true,
                  "id": "name",
                  "label": "Description",
                  "margin": "dense",
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "description",
                  "value": "test",
                  "variant": "standard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>,
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                >
                  Submit
                </WithStyles(Button)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Submit",
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Submit",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
