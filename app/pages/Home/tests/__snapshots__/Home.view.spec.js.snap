// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderView snapshots Scenario 1 matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    classes={Object {}}
    session={
      Object {
        "active": false,
        "user": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <h1>
          Welcome to PlaceList
        </h1>
        <p>
          List, map, share and rank your spots
        </p>
        <div>
          <div>
            <Link
              replace={false}
              to="/login"
            >
              <WithStyles(Button)
                color="primary"
                variant="contained"
              >
                Login
              </WithStyles(Button)>
            </Link>
            <Link
              replace={false}
              to="/signup"
            >
              <WithStyles(Button)
                color="primary"
                variant="contained"
              >
                Sign Up
              </WithStyles(Button)>
            </Link>
          </div>
        </div>
      </div>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Welcome to PlaceList
          </h1>,
          <p>
            List, map, share and rank your spots
          </p>,
          <div>
            <div>
              <Link
                replace={false}
                to="/login"
              >
                <WithStyles(Button)
                  color="primary"
                  variant="contained"
                >
                  Login
                </WithStyles(Button)>
              </Link>
              <Link
                replace={false}
                to="/signup"
              >
                <WithStyles(Button)
                  color="primary"
                  variant="contained"
                >
                  Sign Up
                </WithStyles(Button)>
              </Link>
            </div>
          </div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Welcome to PlaceList",
          },
          "ref": null,
          "rendered": "Welcome to PlaceList",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "List, map, share and rank your spots",
          },
          "ref": null,
          "rendered": "List, map, share and rank your spots",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              <Link
                replace={false}
                to="/login"
              >
                <WithStyles(Button)
                  color="primary"
                  variant="contained"
                >
                  Login
                </WithStyles(Button)>
              </Link>
              <Link
                replace={false}
                to="/signup"
              >
                <WithStyles(Button)
                  color="primary"
                  variant="contained"
                >
                  Sign Up
                </WithStyles(Button)>
              </Link>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  replace={false}
                  to="/login"
                >
                  <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Login
                  </WithStyles(Button)>
                </Link>,
                <Link
                  replace={false}
                  to="/signup"
                >
                  <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Sign Up
                  </WithStyles(Button)>
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Login
                  </WithStyles(Button)>,
                  "className": undefined,
                  "replace": false,
                  "to": "/login",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Login",
                    "className": undefined,
                    "color": "primary",
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Sign Up
                  </WithStyles(Button)>,
                  "className": undefined,
                  "replace": false,
                  "to": "/signup",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign Up",
                    "className": undefined,
                    "color": "primary",
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign Up",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <h1>
            Welcome to PlaceList
          </h1>
          <p>
            List, map, share and rank your spots
          </p>
          <div>
            <div>
              <Link
                replace={false}
                to="/login"
              >
                <WithStyles(Button)
                  color="primary"
                  variant="contained"
                >
                  Login
                </WithStyles(Button)>
              </Link>
              <Link
                replace={false}
                to="/signup"
              >
                <WithStyles(Button)
                  color="primary"
                  variant="contained"
                >
                  Sign Up
                </WithStyles(Button)>
              </Link>
            </div>
          </div>
        </div>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Welcome to PlaceList
            </h1>,
            <p>
              List, map, share and rank your spots
            </p>,
            <div>
              <div>
                <Link
                  replace={false}
                  to="/login"
                >
                  <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Login
                  </WithStyles(Button)>
                </Link>
                <Link
                  replace={false}
                  to="/signup"
                >
                  <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Sign Up
                  </WithStyles(Button)>
                </Link>
              </div>
            </div>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to PlaceList",
            },
            "ref": null,
            "rendered": "Welcome to PlaceList",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "List, map, share and rank your spots",
            },
            "ref": null,
            "rendered": "List, map, share and rank your spots",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                <Link
                  replace={false}
                  to="/login"
                >
                  <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Login
                  </WithStyles(Button)>
                </Link>
                <Link
                  replace={false}
                  to="/signup"
                >
                  <WithStyles(Button)
                    color="primary"
                    variant="contained"
                  >
                    Sign Up
                  </WithStyles(Button)>
                </Link>
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    replace={false}
                    to="/login"
                  >
                    <WithStyles(Button)
                      color="primary"
                      variant="contained"
                    >
                      Login
                    </WithStyles(Button)>
                  </Link>,
                  <Link
                    replace={false}
                    to="/signup"
                  >
                    <WithStyles(Button)
                      color="primary"
                      variant="contained"
                    >
                      Sign Up
                    </WithStyles(Button)>
                  </Link>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(Button)
                      color="primary"
                      variant="contained"
                    >
                      Login
                    </WithStyles(Button)>,
                    "className": undefined,
                    "replace": false,
                    "to": "/login",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Login",
                      "className": undefined,
                      "color": "primary",
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Login",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(Button)
                      color="primary"
                      variant="contained"
                    >
                      Sign Up
                    </WithStyles(Button)>,
                    "className": undefined,
                    "replace": false,
                    "to": "/signup",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign Up",
                      "className": undefined,
                      "color": "primary",
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign Up",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`HeaderView snapshots Scenario 2 matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    classes={Object {}}
    session={
      Object {
        "active": true,
        "user": Object {
          "jwt": "FOO",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <h1>
          Welcome to PlaceList
        </h1>
        <p>
          List, map, share and rank your spots
        </p>
        <Link
          replace={false}
          style={
            Object {
              "textDecoration": "none",
            }
          }
          to="/places"
        >
          <WithStyles(Button)
            color="primary"
            variant="contained"
          >
            Explore the List
          </WithStyles(Button)>
        </Link>
      </div>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Welcome to PlaceList
          </h1>,
          <p>
            List, map, share and rank your spots
          </p>,
          <Link
            replace={false}
            style={
              Object {
                "textDecoration": "none",
              }
            }
            to="/places"
          >
            <WithStyles(Button)
              color="primary"
              variant="contained"
            >
              Explore the List
            </WithStyles(Button)>
          </Link>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Welcome to PlaceList",
          },
          "ref": null,
          "rendered": "Welcome to PlaceList",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "List, map, share and rank your spots",
          },
          "ref": null,
          "rendered": "List, map, share and rank your spots",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              color="primary"
              variant="contained"
            >
              Explore the List
            </WithStyles(Button)>,
            "replace": false,
            "style": Object {
              "textDecoration": "none",
            },
            "to": "/places",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Explore the List",
              "color": "primary",
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Explore the List",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <h1>
            Welcome to PlaceList
          </h1>
          <p>
            List, map, share and rank your spots
          </p>
          <Link
            replace={false}
            style={
              Object {
                "textDecoration": "none",
              }
            }
            to="/places"
          >
            <WithStyles(Button)
              color="primary"
              variant="contained"
            >
              Explore the List
            </WithStyles(Button)>
          </Link>
        </div>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Welcome to PlaceList
            </h1>,
            <p>
              List, map, share and rank your spots
            </p>,
            <Link
              replace={false}
              style={
                Object {
                  "textDecoration": "none",
                }
              }
              to="/places"
            >
              <WithStyles(Button)
                color="primary"
                variant="contained"
              >
                Explore the List
              </WithStyles(Button)>
            </Link>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to PlaceList",
            },
            "ref": null,
            "rendered": "Welcome to PlaceList",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "List, map, share and rank your spots",
            },
            "ref": null,
            "rendered": "List, map, share and rank your spots",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="primary"
                variant="contained"
              >
                Explore the List
              </WithStyles(Button)>,
              "replace": false,
              "style": Object {
                "textDecoration": "none",
              },
              "to": "/places",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Explore the List",
                "color": "primary",
                "variant": "contained",
              },
              "ref": null,
              "rendered": "Explore the List",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
